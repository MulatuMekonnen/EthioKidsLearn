rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to get user role
    function getUserRole() {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return userDoc.data.role;
    }

    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }

    // Helper function to check if user is a teacher
    function isTeacher() {
      return isAuthenticated() && getUserRole() == 'teacher';
    }

    // Helper function to check if user is a parent
    function isParent() {
      return isAuthenticated() && getUserRole() == 'parent';
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to create their own document during registration
      allow create: if isAuthenticated() && request.auth.uid == userId && 
                      request.resource.data.role == 'parent';
      
      // Allow users to read their own document
      allow read: if isOwner(userId);
      
      // Allow admins to read and write all user documents
      allow read, write: if isAdmin();
      
      // Allow teachers to read user documents (for viewing student/parent info)
      allow read: if isTeacher();
      
      // Allow users to update their own document, but not change their role
      allow update: if isOwner(userId) && 
                      request.resource.data.role == resource.data.role;

      // Children subcollection rules
      match /children/{childId} {
        // Allow parent to read and write their children's documents
        allow read, write: if isOwner(userId);
        
        // Allow teachers to read children documents
        allow read: if isTeacher();
        
        // Allow admin full access
        allow read, write: if isAdmin();
        
        // Allow anyone to read child profiles for the child login feature
        allow read: if true;
      }
    }

    // Quiz scores collection rules
    match /quizScores/{scoreId} {
      // Allow teachers to read and write quiz scores
      allow read, write: if isTeacher();
      
      // Allow parents to read their children's quiz scores
      allow read: if isParent() && 
                    request.auth.uid == resource.data.parentId;
      
      // Allow admins full access
      allow read, write: if isAdmin();
    }

    // Progress reports collection rules
    match /progressReports/{reportId} {
      // Allow teachers to read and write progress reports
      allow read, write: if isTeacher();
      
      // Allow parents to read their children's progress reports
      allow read: if isParent() && 
                    request.auth.uid == resource.data.parentId;
      
      // Allow admins full access
      allow read, write: if isAdmin();
    }

    // Class management collection (for teachers and admins)
    match /classes/{classId} {
      // Allow admins full access
      allow read, write: if isAdmin();
      
      // Allow teachers to read all classes and modify their assigned classes
      allow read: if isTeacher();
      allow write: if isTeacher() && 
                    request.auth.uid in resource.data.assignedTeachers;
      
      // Allow parents to read classes their children are enrolled in
      allow read: if isAuthenticated();
    }

    // Restrict access to other collections to admins only
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}